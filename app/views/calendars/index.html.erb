<% content_for :head do %>
  <style>
    .main-container {
      /*min-height: 100vh;*/
      padding: 20px;
      background-color: #fff;
    }
    .calendar-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1.5rem;
    }
    .calendar-title {
      font-size: 1.75rem;
      font-weight: 500;
      color: #495057;
    }
    .legend {
      display: flex;
      gap: 1rem;
      font-size: 0.9rem;
    }
    .legend-item {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .legend-color {
      width: 16px;
      height: 16px;
      border-radius: 50%;
      display: inline-block;
    }
    .calendar-body {
      display: grid;
      grid-template-columns: repeat(7, 1fr); /* Divide en 7 columnas */
      gap: 5px;
      border: 1px solid #dee2e6;
      border-radius: 0rem;
      overflow: hidden;
      background-color: white;
      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }
    .day-name {
      background-color: #e9ecef;
      text-align: center;
      padding: 12px;
      font-weight: bold;
      color: #495057;
    }
    .day {
      min-height: 100px;
      border: 1px solid #dee2e6;
      padding: 8px;
      position: relative;
      cursor: pointer;
      transition: background-color 0.2s;
    }
    .day:hover {
      background-color: #f1f3f5;
    }
    .day.other-month {
      background-color: #f8f9fa;
      color: #adb5bd;
    }
    .day.today {
      background-color: #0d6efd;
      color: white;
    }
    .day.has-event {
      background-color: #fff3cd;
      border-left: 4px solid #ffc107; /* Borde amarillo para eventos */
    }
    .day-number {
      font-weight: bold;
      margin-bottom: 4px;
    }
    .event-dot {
      width: 6px;
      height: 6px;
      border-radius: 50%;
      margin: 2px auto;
      opacity: 0.8;
    }
    .modal-body .form-label {
      font-weight: 500;
    }
  </style>
<% end %>

<% content_for :script do %>
  <script>
      document.addEventListener("DOMContentLoaded", function () {
    const monthYearEl = document.getElementById("month-year");
    const calendarDaysEl = document.getElementById("calendar-days");
    const eventModal = new bootstrap.Modal(document.getElementById("eventModal"));
    const selectedDateSpan = document.getElementById("selected-date");
    const eventForm = document.getElementById("eventForm");
    const saveEventBtn = document.getElementById("saveEvent");

    // Almacenamiento simple de eventos (puedes reemplazarlo por localStorage o backend)
    let events = {}; // Formato: { "2024-07-15": { title: "...", type: "reunion", time: "14:30" } }

    let currentDate = new Date();

    const calendarBodyEl = document.getElementById("calendar-body");

    function renderCalendar(date) {
      const year = date.getFullYear();
      const month = date.getMonth();
      const today = new Date();

      const monthNames = [
        "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio",
        "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"
      ];
      monthYearEl.textContent = `${monthNames[month]} ${year}`;

      // --- CÁLCULOS DE FECHA (orden importante) ---
      const firstDay = new Date(year, month, 1).getDay(); // 0 = Domingo
      const adjustedFirstDay = firstDay === 0 ? 6 : firstDay - 1; // Lunes como día 0
      const daysInMonth = new Date(year, month + 1, 0).getDate();
      const prevMonthDays = new Date(year, month, 0).getDate();

      const todayStr = formatDate(today);

      // --- Eliminar celdas anteriores (excepto los 7 nombres del día) ---
      while (calendarBodyEl.children.length > 7) {
        calendarBodyEl.removeChild(calendarBodyEl.lastChild);
      }

      // --- Ahora sí, usar adjustedFirstDay ---
      // Días del mes anterior
      for (let i = adjustedFirstDay - 1; i >= 0; i--) {
        const day = prevMonthDays - i;
        const dayEl = createDayElement(day, true, null);
        calendarBodyEl.appendChild(dayEl);
      }

      // Días del mes actual
      for (let day = 1; day <= daysInMonth; day++) {
        const dayDate = new Date(year, month, day);
        const dayStr = formatDate(dayDate);
        const dayEvents = events[dayStr] || [];
        const isToday = dayStr === todayStr;

        const dayEl = createDayElement(day, false, dayDate, isToday, dayEvents.length > 0);
        dayEl.dataset.date = dayStr;
        dayEl.addEventListener("click", () => openEventModal(dayDate, dayStr));
        calendarBodyEl.appendChild(dayEl);
      }

      // Rellenar con días del siguiente mes
      const totalCells = 42;
      const cellsFilled = adjustedFirstDay + daysInMonth;
      const remainingCells = totalCells - cellsFilled;

      for (let day = 1; day <= remainingCells; day++) {
        const dayEl = createDayElement(day, true, null);
        calendarBodyEl.appendChild(dayEl);
      }
    }

    function createDayElement(day, isOtherMonth, date, isToday = false, hasEvent = false) {
      const div = document.createElement("div");
      div.className = `day ${isOtherMonth ? 'other-month' : ''} ${isToday ? 'today' : ''} ${hasEvent ? 'has-event' : ''}`;
      
      const dayNumber = document.createElement("div");
      dayNumber.className = "day-number";
      dayNumber.textContent = day;
      div.appendChild(dayNumber);

      // Si tiene evento, mostrar puntos pequeños
      if (hasEvent && !isOtherMonth) {
        const eventDot = document.createElement("div");
        eventDot.className = "event-dot";
        const eventType = events[formatDate(date)]?.[0]?.type || "reunion";
        const colors = { reunion: "#ffc107", birthday: "#198754", task: "#dc3545" };
        eventDot.style.backgroundColor = colors[eventType];
        div.appendChild(eventDot);
      }

      return div;
    }

    function formatDate(date) {
      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;
    }

    function openEventModal(date, dateStr) {
      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
      selectedDateSpan.textContent = date.toLocaleDateString('es-ES', options);
      eventForm.reset();

      // Guardar evento
      saveEventBtn.onclick = () => {
        const title = document.getElementById("eventTitle").value;
        const type = document.getElementById("eventType").value;
        const time = document.getElementById("eventTime").value;

        if (!title) return alert("Por favor ingresa un título");

        if (!events[dateStr]) events[dateStr] = [];
        events[dateStr].push({ title, type, time });

        eventModal.hide();
        renderCalendar(currentDate); // Volver a renderizar para mostrar el punto
      };

      eventModal.show();
    }

    // Navegación entre meses
    document.querySelector(".calendar-title").insertAdjacentHTML(
      "afterend",
      `<div class="d-flex gap-2 mb-3">
        <button id="prev" class="btn btn-outline-secondary">< Anterior</button>
        <button id="today" class="btn btn-primary">Hoy</button>
        <button id="next" class="btn btn-outline-secondary">Siguiente ></button>
      </div>`
    );

    document.getElementById("prev").addEventListener("click", () => {
      currentDate.setMonth(currentDate.getMonth() - 1);
      renderCalendar(currentDate);
    });

    document.getElementById("next").addEventListener("click", () => {
      currentDate.setMonth(currentDate.getMonth() + 1);
      renderCalendar(currentDate);
    });

    document.getElementById("today").addEventListener("click", () => {
      currentDate = new Date();
      renderCalendar(currentDate);
    });

    // Render inicial
    renderCalendar(currentDate);
  });
  </script>
<% end %>

<div class="mt-4">
  <h1>
    <i class="fa fa-calendar me-2"></i> Mi Calendario
  </h1>
  <hr>
</div>

<div class="main-container">
  <!-- Encabezado -->
  <div class="calendar-header">
    <h2 class="calendar-title" id="month-year">Julio 2024</h2>
    <div class="legend">
      <span class="legend-item">
        <span class="legend-color" style="background-color: #0d6efd;"></span> Reunión
      </span>
      <span class="legend-item">
        <span class="legend-color" style="background-color: #198754;"></span> Cumpleaños
      </span>
      <span class="legend-item">
        <span class="legend-color" style="background-color: #dc3545;"></span> Tarea
      </span>
    </div>
  </div>

  <!-- Días de la semana -->
  <div class="calendar-body" id="calendar-body">
    <div class="day-name">Lunes</div>
    <div class="day-name">Martes</div>
    <div class="day-name">Miércoles</div>
    <div class="day-name">Jueves</div>
    <div class="day-name">Viernes</div>
    <div class="day-name text-danger">Sábado</div>
    <div class="day-name text-danger">Domingo</div>

    <!-- Aquí se insertan los días -->
  </div>
</div>

<!-- Modal para Agregar Evento -->
<div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="eventModalLabel">Agendar para <span id="selected-date"></span></h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
      </div>
      <div class="modal-body">
        <form id="eventForm">
          <div class="mb-3">
            <label for="eventTitle" class="form-label">Título del evento</label>
            <input type="text" class="form-control" id="eventTitle" required>
          </div>
          <div class="mb-3">
            <label for="eventType" class="form-label">Tipo de evento</label>
            <select class="form-select" id="eventType" required>
              <option value="reunion">Reunión</option>
              <option value="birthday">Cumpleaños</option>
              <option value="task">Tarea</option>
            </select>
          </div>
          <div class="mb-3">
            <label for="eventTime" class="form-label">Hora (opcional)</label>
            <input type="time" class="form-control" id="eventTime">
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-primary" id="saveEvent">Guardar evento</button>
      </div>
    </div>
  </div>
</div>